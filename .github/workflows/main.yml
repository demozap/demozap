name: CI

on: push

env:
  NODE_VERSION: '22.x'
  FILE_PATH_VERSION_INFO: ./src/common/utils/version-info.ts
  FOLDER_PATH_STORYBOOK_BUILD: ./build-storybook-static

jobs:
  build:
    name: Build 🏗️
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build 🏗️
        run: npm run build

  lint:
    name: Lint ✅
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint ✅
        run: npm run lint

  tsc:
    name: TypeScript Compiler 🔎
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: TypeScript Compiler 🔎
        run: npm run tsc

  test:
    name: Test 🧪
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Test 🧪
        run: npm run test-report

  storybook:
    runs-on: ubuntu-latest
    needs: [build, lint, tsc, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build 🏗️
        run: npm run storybook-build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ${{ env.FOLDER_PATH_STORYBOOK_BUILD }}
          clean: true

  npm-release:
    runs-on: ubuntu-latest
    needs: [build, lint, tsc, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache dependencies ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: npm ci

      - name: Version Info 💉
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          VERSION_SPACES=$(npm run release --dry-run | grep -oP 'Published release \K.*? ')
          VERSION="${VERSION_SPACES// /}"
          echo "export const VERSION_INFO = 'v$VERSION';" > $FILE_PATH_VERSION_INFO
          cat $FILE_PATH_VERSION_INFO

      - name: Build 🏗️
        run: npm run build

      - name: Release 🚀
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
